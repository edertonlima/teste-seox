@mixin cover {
	background-size: cover;
	background-position: center;
	background-repeat: no-repeat;
}




@mixin centerer {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}


@mixin gradiente3($angulo,$opacity,$grad1, $grad2, $grad3) {
	$angulo: $angulo+deg;
	background: $grad1; /* For browsers that do not support gradients */
	background: -webkit-linear-gradient($angulo ,rgba($grad1, $opacity), rgba($grad2, $opacity), rgba($grad3, $opacity)); /* For Safari 5.1 to 6.0 */
	background: -o-linear-gradient($angulo ,rgba($grad1, $opacity), rgba($grad2, $opacity), rgba($grad3, $opacity)); /* For Opera 11.1 to 12.0 */
	background: -moz-linear-gradient($angulo ,rgba($grad1, $opacity), rgba($grad2, $opacity), rgba($grad3, $opacity)); /* For Firefox 3.6 to 15 */
	background: linear-gradient($angulo ,rgba($grad1, $opacity), rgba($grad2, $opacity), rgba($grad3, $opacity)); /* Standard syntax */
}

@mixin gradiente2($angulo,$opacity,$grad1, $grad2) {
	$angulo: $angulo+deg;
	background: $grad1; /* For browsers that do not support gradients */
	background: -webkit-linear-gradient($angulo ,rgba($grad1, $opacity), rgba($grad2, $opacity)); /* For Safari 5.1 to 6.0 */
	background: -o-linear-gradient($angulo ,rgba($grad1, $opacity), rgba($grad2, $opacity)); /* For Opera 11.1 to 12.0 */
	background: -moz-linear-gradient($angulo ,rgba($grad1, $opacity), rgba($grad2, $opacity)); /* For Firefox 3.6 to 15 */
	background: linear-gradient($angulo ,rgba($grad1, $opacity), rgba($grad2, $opacity)); /* Standard syntax */
}

@mixin background-size($value) {
	-webkit-background-size: $value;
	-moz-background-size: $value;
	-o-background-size: $value;
	background-size: $value;
}

@mixin rotacao($value) {
	@if $value == '' {
		$value: -45deg;
	}@else{
		$value: $value+deg;
	}
	-webkit-transform: rotate($value);
	-moz-transform: rotate($value);
	-o-transform: rotate($value);
	-ms-transform: rotate($value);
	transform: rotate($value);
}

@mixin scale() {
	$value: 1.1;
	-webkit-transform: scale($value);
	-moz-transform: scale($value);
	-o-transform: scale($value);
	-ms-transform: scale($value);
	transform: scale($value);
}

@mixin scale-rotate() {
	$scale: 1.1;
	$rotate: -3deg;
	-webkit-transform: scale($scale) rotate($rotate);
	-moz-transform: scale($scale) rotate($rotate);
	-o-transform: scale($scale) rotate($rotate);
	-ms-transform: scale($scale) rotate($rotate);
	transform: scale($scale) rotate($rotate);
}

@mixin box-sizing() {
	$value: border-box;
	-webkit-box-sizing: $value;
	-moz-box-sizing: $value;
	box-sizing: $value;
}

@mixin animacao() {
	$value1: 0.2;
	$value2: 0;
	$valueIni: $value1+s;
	$valueEnd: $value2+s;
	-moz-transition: all $valueIni ease $valueEnd;
	-webkit-transition: all $valueIni ease $valueEnd;
	-o-transition: all $valueIni ease $valueEnd;
}

@mixin animacao-slow() {
	$value1: 0.8;
	$value2: 0;
	$valueIni: $value1+s;
	$valueEnd: $value2+s;
	-moz-transition: all $valueIni ease $valueEnd;
	-webkit-transition: all $valueIni ease $valueEnd;
	-o-transition: all $valueIni ease $valueEnd;
}

@mixin animacao-off() {
	-moz-transition: none;
	-webkit-transition: none;   
	-o-transition: none;
}

@mixin clear() {
	clear: both;

    &:before, &:after {
        display: table;
        content: ''; 
    }

    &:after {
        clear: both;
    }
}

@mixin placeholder {
	&::-webkit-input-placeholder {@content}
	&:-moz-placeholder           {@content}
	&::-moz-placeholder          {@content}
	&:-ms-input-placeholder      {@content}
}

@mixin grayscale($value) {
    -webkit-filter: #{"grayscale(#{$value})"};
    -moz-filter: #{"grayscale(#{$value})"};
    filter:#{"grayscale(#{$value})"};
}


@mixin m420 {
	@media all and (max-width: 420px){
		@content
	}
}